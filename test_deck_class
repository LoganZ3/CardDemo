import unittest
from playing_card import PlayingCard, Deck, Hand

class TestDeck(unittest.TestCase):

    def test_deck_creation(self):
        deck = Deck()
        self.assertEqual(len(deck.cards), 52)

    def test_deck_shuffling(self):
        deck = Deck()
        original_order = deck.cards[:]  # Copy the original order
        deck.shuffle()
        self.assertNotEqual(deck.cards, original_order)  # Should be different after shuffle

    def test_draw_card(self):
        deck = Deck()
        card = deck.draw_card()
        self.assertIsInstance(card, PlayingCard)
        self.assertEqual(len(deck.cards), 51)  # After drawing, deck size should be 51

    def test_empty_deck_draw(self):
        deck = Deck()
        for _ in range(52):  # Draw all cards
            deck.draw_card()
        self.assertIsNone(deck.draw_card())  # Deck should be empty, return None

